Assignment 1: Due Wednesday, September 19 at noon.

The 8 problems here correspond to the 8 Java classes Part1.java, ..., Part8.java provided in the assignment skeleton. Part0.java is a sample program that reads data one line at a time from some input source and writes data to an output destination.  You should use this as a basis for code. 

1) [12.5 marks] Read the input one line at a time and write each line to the output if it is not a duplicate of some previous input line. Take special care so that a file with a lot of duplicate lines does not use more memory than what is required for the number of unique lines.
    
2) [12.5 marks] Read each of the lines of the input and output them in sorted order. Duplicate lines should be printed only once. Take special care so that a file with a lot of duplicate lines does not use more memory than what is required for the number of unique lines.
    
3) [12.5 marks] Read each of the lines of the input and output them in sorted order. Duplicate lines should be printed the same number of times they occur in the input. Take special care so that a file with a lot of duplicate lines does not use more memory than what is required for the number of unique lines.
    
4) [12.5 marks] Read the first 50 lines of input and then write them out in reverse order. Read the next 50 lines and then write them out in reverse order. Do this until there are no more lines left to read. If the number of lines is not a multiple of 50 then the last batch of lines to be reverses will be however many there are (between 1 and 49). 

In other words, your output will start with the 50th line, then the 49th, then the 48th, and so on down to the first line. This will be followed by the 100th line, followed by the 99th, and so on down to the 51st line. And so on. 

Your code should never have to store more than 50 lines at any given time.


5) [12.5 marks] Read the whole input one line at a time. Then output all lines sorted by length, with the shortest lines first. In the case where two lines have the same length, resolve their order using the usual "sorted order".

6) [12.5 marks] Read the entire input one line at a time and then output the even numbered lines (starting with the first line, line 0) followed by the odd-numbered lines. The order even lines (and odd lines) should be the same as they appeared in the input.
    
7) [12.5 marks] Read the input one line at a time. At any point after reading the first 42 lines, if some line is blank (i.e., a string of length 0) then output the line that occurred 42 lines prior to that one. For example, if Line 242 is blank, then your program should output line 200. This program should be implemented so that it never stores more than 43 lines of the input at any given time.
    

8) [12.5 marks] Read the entire input one line at a time and randomly permute the lines before outputting it.

Note: You shouldn't modify the contents of any line. The order of the lines will be modified. For a given input file, running the program multiple times should result in different output orders each time (with very high probability).


Submit
======

Submit a single zip file that has a directory called comp2402a1. Your eight (8) java files should be in this file. Do NOT submit .class files or any other files.

Once the submission server is running you may submit as many times (there will be delays if you submit too often) before the deadline. DO NOT wait until 11:59am on Wednesday to submit.